/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkg48_gui07;

/**
 *
 * @author Gerardo
 */
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
public class Formulario1 extends javax.swing.JFrame {
    //declaracion de variables globales
    //El modelo de lista1 debe de ser accesible desde cualquier
    //parte de esta clase, por eso se declara aqui como variable global
    DefaultListModel modelo1;
    
    //funcion o metodo para contar los perros y los gatos
    public void contar(){
        //variables contador:
        int perros = 0, gatos = 0;
        //recorrer a modelo1, registro por registro
        for( int i = 0; i < modelo1.size(); i++ ){
            //recuperar el animal en la posicion i y ponerlo en una variable
            String animal = modelo1.getElementAt(i).toString();
            //clasificar la inforcacion del animal
            if( animal.toUpperCase().contains("PERRO") == true ) perros++;
            if( animal.toUpperCase().contains("GATO") == true ) gatos++;
        }
        //mostrar los resultados en las cajas de texto respectivas
        caja2.setText( String.valueOf(gatos) );
        caja3.setText( String.valueOf(perros) );
    }
    
    /**
     * Creates new form Formulario1
     */
    public Formulario1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lista1 = new javax.swing.JList<>();
        caja1 = new javax.swing.JTextField();
        boton1 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        boton3 = new javax.swing.JButton();
        boton4 = new javax.swing.JButton();
        boton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        caja2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        caja3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lista1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lista1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Rojo", "Amarillo", "Aul", "Verde", "Gris" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lista1);

        caja1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        boton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        boton1.setText("Agregar (metodo 1)");
        boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton1ActionPerformed(evt);
            }
        });

        boton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        boton2.setText("Agregar (metodo 2)");
        boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton2ActionPerformed(evt);
            }
        });

        boton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        boton3.setText("Editar");
        boton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton3ActionPerformed(evt);
            }
        });

        boton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        boton4.setText("Eliminar");
        boton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton4ActionPerformed(evt);
            }
        });

        boton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        boton5.setText("Limpiar");
        boton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Cantidad de gatos:");

        caja2.setEditable(false);
        caja2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        caja2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        caja2.setText("0");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Cantidad de perros:");

        caja3.setEditable(false);
        caja3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        caja3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        caja3.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(caja2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(caja3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(caja1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boton1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(caja1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton3)
                        .addGap(37, 37, 37)
                        .addComponent(boton4)
                        .addGap(38, 38, 38)
                        .addComponent(boton5)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(caja2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(caja3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //dar memoria a modelo1 (variable global)
        modelo1 = new DefaultListModel();
        //llenar el modelo con datos de prueba
        modelo1.addElement("Gallina");
        modelo1.addElement("Perico");
        modelo1.addElement("Gato");
        modelo1.addElement("Capibara");
        modelo1.addElement("Perro");
        //apuntar a modelo1 como model en lista1
        lista1.setModel(modelo1);
        
        contar(); //mandar a contar perros y gatos
    }//GEN-LAST:event_formWindowOpened

    private void boton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton1ActionPerformed
        //agregar a la lista (metodo 1)
        //lo que escribamos en caja1 se va a agregar al JList
        //validar que caja1 no venga en blanco:
        if( caja1.getText().trim().length() > 0 ){
            modelo1.addElement( caja1.getText() );
            contar(); //mandar a contar perros y gatos
            caja1.setText(""); //vaciar la caja luego de agregar
        }
        else
            JOptionPane.showMessageDialog(this, "Debe llenar la caja");
    }//GEN-LAST:event_boton1ActionPerformed

    private void boton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton2ActionPerformed
        //agregar a la lista (metodo 2)
        //agregamos al JList lo que se lea desde un JOptionPane
        //depositar en un String lo capturado en una alerta:
        String x = JOptionPane.showInputDialog(this,"Digite especie de animal:");
        //si cancela o cierra el input entonces x tendra un valor null
        //entonces si x NO ES null quiere decir que hizo click en Aceptar
        if( x != null ){
            if( x.trim().length() > 0 ){
                modelo1.addElement(x);
                contar(); //mandar a contar perros y gatos
            }
            else
                JOptionPane.showMessageDialog(this, "No se acepta texto en blanco");
        }
    }//GEN-LAST:event_boton2ActionPerformed

    private void boton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton3ActionPerformed
        //validar que se ha seleccionado un animal a editar
        if( lista1.getSelectedIndex() == -1 )
            JOptionPane.showMessageDialog(this, "Debe seleccionar un animal de la lista");
        else{
            //mostrar un input con el texto del animal seleccionado
            String actual = lista1.getSelectedValue();
            String x = JOptionPane.showInputDialog(this,"Digite el nuevo nombre:",actual);
            if( x != null ){
                if( x.trim().length() > 0 ){
                    //reemplazar el valor actual con el nuevo
                    modelo1.setElementAt(x, lista1.getSelectedIndex());
                    contar(); //mandar a contar perros y gatos
                }
                else
                    JOptionPane.showMessageDialog(this, "No se acepta texto en blanco");
            }
        }
    }//GEN-LAST:event_boton3ActionPerformed

    private void boton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton4ActionPerformed
        //validar que se ha seleccionado un animal a eliminar
        if( lista1.getSelectedIndex() == -1 )
            JOptionPane.showMessageDialog(this, "Debe seleccionar un animal de la lista");
        else{
            //preguntarle al usuario si desea eliminar
            int opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar el item?");
            //opcion guarda el numero del boton en el que se hizo click en el Confirm
            if( opcion == 0 ){
                //el boton 0 es el de Aceptar:
                modelo1.removeElementAt( lista1.getSelectedIndex() );
                contar(); //mandar a contar perros y gatos
            }
        }
    }//GEN-LAST:event_boton4ActionPerformed

    private void boton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton5ActionPerformed
        //limpia toda la lista
        //pero preguntamos antes
        int opcion = JOptionPane.showConfirmDialog(this, "Desea limpiar toda la lista?");
        if( opcion == 0 ){
            modelo1.removeAllElements();
            contar(); //mandar a contar perros y gatos
        }
    }//GEN-LAST:event_boton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JTextField caja1;
    private javax.swing.JTextField caja2;
    private javax.swing.JTextField caja3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lista1;
    // End of variables declaration//GEN-END:variables
}
